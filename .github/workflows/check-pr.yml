name: Check Pull Request

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install System Dependencies
      run: |
        sudo apt-get install libsndfile1
        sudo apt-get install ffmpeg
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
    - name: Run tests with Tox
      run: tox -e py
    - name: Upload Codecov
      uses: codecov/codecov-action@v1
    - uses: iterative/setup-cml@v1
      if: matrix.python-version == '3.10'
    - name: Create CML report
      if: matrix.python-version == '3.10'
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cml publish test-outputs/trained-speakerbox/validation-confusion.png --md >> test-outputs/trained-speakerbox/results.md
        currentHash=$(git rev-parse --short HEAD)
        echo "**Results from commit:** $currentHash" >> results.md
        cml send-comment test-outputs/trained-speakerbox/results.md
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
    - name: Lint
      run: pre-commit run --all-files --show-diff-on-failure

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install System Dependencies
      run: |
        sudo apt-get install libsndfile1
        sudo apt-get install ffmpeg
    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install .[dev]
    - name: Generate Docs
      run: |
        make gen-docs
